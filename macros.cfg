#####################################################################
#	Macros
#####################################################################

[delayed_gcode LED_OFF]
gcode:
    STOP_LED_EFFECTS
    status_off

[gcode_macro PRINT_START]
gcode:
    # Turn On Nozzle LED 
    SET_NOZZLE_LEDS_ON
    # Home the printer
    status_leveling
    G28
    {% set BED_TEMP = params.BED_TEMP|default(105)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    # BED_MESH_CALIBRATE
    # Start bed heating
    status_heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Stow Probe
    # PROBE_STOW

    # Load default bed-mesh
    #BED_MESH_PROFILE LOAD=default
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.00
    # Move the nozzle near the bed
    # G1 Z15 F3000
    # Move the nozzle very close to the bed
    # G1 Z0.15 F300
    
    # set_led_strip_on

    # Wait for bed to reach temperature
    #M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    SET_NOZZLE_LEDS_ON
    PURGE_BLOB
    M117 Printing started
 

[gcode_macro PRINT_START_MESH]
gcode:
    # Turn On Nozzle LED 
    SET_NOZZLE_LEDS_ON
    # Home the printer
    status_leveling
    G28
    {% set BED_TEMP = params.BED_TEMP|default(105)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    BED_MESH_CALIBRATE
    # Start bed heating
    status_heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Load default bed-mesh
    BED_MESH_PROFILE LOAD=default
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.00
    # Move the nozzle near the bed
    # G1 Z15 F3000
    # Move the nozzle very close to the bed
    # G1 Z0.15 F300
    
    # set_led_strip_on

    # Wait for bed to reach temperature
    #M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    SET_NOZZLE_LEDS_ON
    PURGE_BLOB
    M117 Printing started

[gcode_macro PRINT_END]
gcode:
    G91
    LEDS_ON
    status_busy
    # Retract a bit
    G1 E-5 F2700
    G1 E-2 Z0.2 F2400
    G1 X5 Y5 F3000
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Raise nozzle by 20mm
    G1 Z20 F3000
    G90
    # Deliver print
    G1 X200 Y200   
    # Probe Deploy
    # PROBE_DEPLOY
    # G1 X0 
    # Disable steppers
    M84 X Y E
    
    # Clear bed mesh
    # BED_MESH_CLEAR
    
    # Turn off gcode offset
    SET_GCODE_OFFSET Z=0
    #Clear SD Card
    #SDCARD_RESET_FILE
    status_part_ready
    UPDATE_DELAYED_GCODE ID=LED_OFF DURATION=600

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    # Probe Deploy
    # PROBE_DEPLOY
    G1 X{x_park} Y{y_park} Z50 F6000
    TURN_OFF_HEATERS
    # Disable steppers
    M84 X Y E    
    CANCEL_PRINT_BASE
    status_off

#####################################################################
#	Filament Load and Unload
#####################################################################

[gcode_macro Load]
gcode:
#   M117 Loading...
  status_heating
  M109 S200
  status_busy
  G21;(metric values)
  G90;(absolute positioning)
  G92 E0
  G0 E10 F200
  G0 E10 F100
#   M117 Load Complete!
#   UPDATE_DELAYED_GCODE ID=clear_display DURATION=10

[gcode_macro Unload]
gcode:
#   M117 Unloading...
  status_heating
  M109 S200
  status_busy
  G21;(metric values)
  G90;(absolute positioning)
  G92 E0
  G0 E-20 F200
  G0 E-300 F2000
#   M117 Unload Complete!
  M104 S0
  M106 S0
#   UPDATE_DELAYED_GCODE ID=clear_display DURATION=10


#####################################################################
#	CALIBRATE PRINTER
#####################################################################

# [gcode_macro Attach_Probe]
# gcode:
#     G90
#     status_busy
#     # G1 Z20
#     G1 Z20 X119 F20000
#     G1 X80 Y-110 Z25 F3000
#     status_ready

# [gcode_macro Dock_Probe]
# gcode:
#     G90
#     status_busy
#     G1 Z20
#     # G1  F20000    
#     G1 X119 Y-110 F20000
#     G1 Z1 F1000
#     G4 P500
#     G1 X90 F1000
#     G1 X0 Z50 F20000
      
#     # G1 Z5
#     status_ready

[gcode_macro AUTO_BED_MESH]
gcode:
    status_homing
    # PROBE_DEPLOY
    G28
    status_meshing
    BED_MESH_CALIBRATE
    G1 Y10 F20000
    BED_MESH_PROFILE save=default
    status_off

[gcode_macro G29]
gcode:
    G28
    # PROBE_DEPLOY
    status_meshing
    BED_MESH_CALIBRATE
    G1 Y10 Z10 F20000
    BED_MESH_PROFILE save=default
    status_off

[gcode_macro BED_SCREW]
gcode:
    G28
    status_meshing
    SCREWS_TILT_CALCULATE

[gcode_macro PID_TUNE_EXTRUDER]
gcode:
    status_heating
    PID_CALIBRATE HEATER=extruder TARGET=230

[gcode_macro PID_TUNE_BED]
gcode:
    status_heating
    PID_CALIBRATE HEATER=heater_bed TARGET=105

[gcode_macro PROBE_Z_CALIBRATE]
gcode:
    status_calibrating_z
    PROBE_CALIBRATE

#####################################################################
#	Stealthburner LEDS - Macros
#####################################################################
# The following status macros are available:
#    STATUS_READY
#    STATUS_OFF
#    STATUS_BUSY
#    STATUS_HEATING
#    STATUS_LEVELING
#    STATUS_HOMING
#    STATUS_CLEANING
#    STATUS_MESHING
#    STATUS_CALIBRATING_Z
# With additional macros for direct control:
#    SET_NOZZLE_LEDS_ON
#    SET_LOGO_LEDS_OFF
#    SET_NOZZLE_LEDS_OFF

# [gcode_macro _sb_vars]
# # User settings for the StealthBurner status leds. You can change the status colors and led
# # configurations for the logo and nozzle here.
# variable_colors: {
#         'logo': { # Colors for logo states
#             'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},
#             'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},
#             'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},
#             'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},
#             'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},
#             'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},
#             'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},
#             'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
#             'printing': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
#             'standby': {'r': 0.01, 'g': 0.01, 'b': 0.01, 'w': 0.1},
#             'white': {'r': 1.0, 'g': 1.0, 'b': 1.0, 'w': 1.0},
#         },
#         'nozzle': { # Colors for nozzle states
#             'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},
#             'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
#             'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},
#             'standby': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0},
#         },
#         'thermal': {
#             'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
#             'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}
#         }
#     }
# variable_logo_led_name:         "SB_LEDS" 
# # The name of the addressable LED chain that contains the logo LED(s)
# variable_logo_idx:              "1" 
# # A comma-separated list of indexes LEDs in the logo
# variable_nozzle_led_name:       "SB_LEDS"
# # The name of the addressable LED chain that contains the nozzle LED(s). This will
# # typically be the same LED chain as the logo.
# variable_nozzle_idx:            "2,3"
# # A comma-separated list of indexes of LEDs in the nozzle

# variable_thermal_config: {
#         'extruder': {
#             'cool_temp': 40,
#             'leds': 'logo',
#         },
#         'heater_bed': {
#             'cool_temp': 40,
#             'leds': 'nozzle',
#         },
#     }
# # temperatures at which cooling will be considered complete

# gcode:
#     ; Do nothing

# [gcode_macro _set_SB_LEDS]
# gcode:
#     {% set red = params.RED|default(0)|float %}
#     {% set green = params.GREEN|default(0)|float %}
#     {% set blue = params.BLUE|default(0)|float %}
#     {% set white = params.WHITE|default(0)|float %}
#     {% set led = params.LED|string %}
#     {% set idx = (params.IDX|string).split(',') %}
#     {% set transmit_last = params.TRANSMIT|default(1) %}
    
#     {% for led_index in idx %}
#         {% set transmit=transmit_last if loop.last else 0 %}
#         set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
#     {% endfor %}

# [gcode_macro _set_SB_LEDS_by_name]
# gcode:
#     {% set leds_name = params.LEDS %}
#     {% set color_name = params.COLOR %}
#     {% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}
#     {% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}
#     {% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}
#     {% set transmit = params.TRANSMIT|default(1) %}

#     _set_SB_LEDS led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}

# [gcode_macro _set_logo_leds]
# gcode:
#     {% set red = params.RED|default(0)|float %}
#     {% set green = params.GREEN|default(0)|float %}
#     {% set blue = params.BLUE|default(0)|float %}
#     {% set white = params.WHITE|default(0)|float %}
#     {% set led = printer["gcode_macro _sb_vars"].logo_led_name %}
#     {% set idx = printer["gcode_macro _sb_vars"].logo_idx %}
#     {% set transmit=params.TRANSMIT|default(1) %}

#     _set_SB_LEDS led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

# [gcode_macro _set_nozzle_leds]
# gcode:
#     {% set red = params.RED|default(0)|float %}
#     {% set green = params.GREEN|default(0)|float %}
#     {% set blue = params.BLUE|default(0)|float %}
#     {% set white = params.WHITE|default(0)|float %}
#     {% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}
#     {% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}
#     {% set transmit=params.TRANSMIT|default(1) %}

#     _set_SB_LEDS led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

# [gcode_macro set_logo_leds_on]
# gcode:
#     {% set transmit=params.TRANSMIT|default(1) %}
#     _set_logo_leds red=1 blue=1 green=1 white=0 transmit={transmit}
# [gcode_macro set_logo_leds_off]
# gcode:
#     {% set transmit=params.TRANSMIT|default(1) %}
#     _set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}

# [gcode_macro set_nozzle_leds_on]
# gcode:
#     {% set transmit=params.TRANSMIT|default(1) %}
#     _set_SB_LEDS_by_name leds="nozzle" color="on" transmit={transmit}

# [gcode_macro set_nozzle_leds_off]
# gcode:
#     {% set transmit=params.TRANSMIT|default(1) %}
#     _set_SB_LEDS_by_name leds="nozzle" color="off" transmit={transmit}


# [gcode_macro status_off]
# gcode:
#     set_logo_leds_off transmit=0
#     set_nozzle_leds_off

# [gcode_macro status_ready]
# gcode:
#     _set_SB_LEDS_by_name leds="logo" color="standby" transmit=0
#     # _set_SB_LEDS_by_name leds="nozzle" color="standby" transmit=1

# [gcode_macro status_busy]
# gcode:
#     _set_SB_LEDS_by_name leds="logo" color="busy" transmit=0
#     set_nozzle_leds_on

# [gcode_macro status_heating]
# gcode:
#     _set_SB_LEDS_by_name leds="logo" color="heating" transmit=0
#     # _set_SB_LEDS_by_name leds="nozzle" color="heating" transmit=1

# [gcode_macro status_leveling]
# gcode:
#     _set_SB_LEDS_by_name leds="logo" color="leveling" transmit=0
#     set_nozzle_leds_on

# [gcode_macro status_homing]
# gcode:
#     _set_SB_LEDS_by_name leds="logo" color="homing" transmit=0
#     set_nozzle_leds_on

# [gcode_macro status_cleaning]
# gcode:
#     _set_SB_LEDS_by_name leds="logo" color="cleaning" transmit=0
#     set_nozzle_leds_on

# [gcode_macro status_meshing]
# gcode:
#     _set_SB_LEDS_by_name leds="logo" color="meshing" transmit=0
#     set_nozzle_leds_on

# [gcode_macro status_calibrating_z]
# gcode:
#     _set_SB_LEDS_by_name leds="logo" color="calibrating_z" transmit=0
#     set_nozzle_leds_on

# [gcode_macro status_printing]
# gcode:
#     _set_SB_LEDS_by_name leds="logo" color="printing" transmit=0
#     set_nozzle_leds_on

[gcode_macro LEDS_OFF]
gcode:
    STOP_LED_EFFECTS
    status_off
    # set_led_strip_off

[gcode_macro LEDS_ON]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=rainbow
    # set_led_strip_on

# [gcode_macro set_led_strip_on]
# gcode:
#     SET_PIN PIN=led_strip VALUE=100

# [gcode_macro set_led_strip_off]
# gcode:
#     SET_PIN PIN=led_strip VALUE=0

# TYPE
# extruder_temp extruder temperature relative to target temperature (if is set) or to maxim temperature
# bed_temp bed temperature relative to target temperature (if is set) or to maxim temperature
# print_percent progress of current print
# printer_speed current speed relative to maximum printer speed
# MODE
# GLOW all leds will fade from one color (or non) to an other color
# PROGRESS the leds will light up one by one




# [gcode_macro set_progress_led]
# gcode:
#     NEOPIXEL_DISPLAY LED="SB_LOGO" TYPE=print_percent MODE=glow

######################################################################
## Filament Change                                                  ##
######################################################################
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 130mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "SWAP_RESUME" gcode.
[gcode_macro M600]
########### Gcode ############
gcode:
  {% set X = params.X|default(printer.configfile.config["stepper_x"]["position_endstop"]|string)|int %}
  {% set Y = params.Y|default(printer.configfile.config["stepper_y"]["position_endstop"]|string)|int %}
  {% set Z = params.Z|default(10)|int %}
  {% set E = params.E|default(-20)|int %}
  {% set tool = params.tool|default(0)|int %}

        SAVE_GCODE_STATE NAME=M600_state
        PAUSE
        G91
        G1 E-5 F4000
        G1 Z{Z}
        G90
        G1 X{X} Y{Y} F3000        ;park position
        G0 E10 F500                ;extrude filament to get better blob on end
        G0 E{E} F600             ;retract additional filament to move out of melt zone
        G92 E0
        SET_FILAMENT_SENSOR SENSOR=e{TOOL}_runout ENABLE=0

#    Use this command resume during a mid print filament swap (DONT USE OCTO/MAINSAIL/DWC RESUME)
[gcode_macro SWAP_RESUME] 
gcode:
    RESTORE_GCODE_STATE NAME=M600_state
    SET_FILAMENT_SENSOR SENSOR=e0_runout ENABLE=1
    SET_FILAMENT_SENSOR SENSOR=e1_runout ENABLE=1
    resume


# In order to use this you need to increase max_extrude_cross_section in your extruder config or klipper will complain. I set mine to 30
[gcode_macro PURGE_BLOB]
gcode:
    # This is for a 300mm bed. If you have a diferent bed size you may want to adjust the line below
    {% set rand_pos = (50 + ( printer.system_stats.cputime * 1000 ) % 60) %}           ; Generate pseudo random start pos so we dont wear out that one spot on the bed. 
    M117 Purging at X{ rand_pos }                                                       
    
    # The start pos will be within the "handle" of the flex plate where there is some extra Y space available so we can go all the way to Y0
    # If your setup does not have this extra space then just increase the y valie in the line "G1 X{ rand_pos } Y0 Z1 F18000"
    G92 E0                          ; zero the extruder
    G90                             ; absolute positioning
    G1 X{ rand_pos } Y5 Z1 F20000   ; Go to start pos for purge line
    G1 Z0.3 F600                    ; Lower to purge height
    G91                             ; relative positioning
    M106 P0                         ; Enable Cooling Fan
    G1 Z3 E25 F15                   ; Extrude blob of filament on the bed
    G1 X20 Z3 E-2 F1000              ; Slow drag away from the blob with fans helping cool and break strings. Also raiz z zo the blob clears the fan duct
    G1 X10 Z-6 F10000               ; Now that the blob has cleared the duct we go back down for a short 0.3mm height extrusion
    G1 X10 E1 F200                   ; Slow 5mm extrude move to help with stringing
    G1 X40 E-0.5 F9000                ; Fast move and retract to break strings and reduce ooze
    # G1 Z1 F500                      ; Lift
    M106 P0 S0                      ; Disable Cooling Fan
    G92 E0                          ; zero the extruder
    G90                             ; absolute positioning
    M117 Purging Done
    # G1 X0 Z2 F9000    
